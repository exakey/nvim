return
{
        "hedyhli/outline.nvim",
        event  = "LspAttach",
        cmd    = { "Outline", "OutlineOpen" },
        config = function()
                require("outline").setup({
                        outline_window = {
                                position                = 'right',
                                split_command           = nil,
                                width                   = 25,
                                relative_width          = true,
                                auto_close              = false,
                                auto_jump               = false,
                                jump_highlight_duration = 300,
                                center_on_jump          = true,
                                show_numbers            = false,
                                show_relative_numbers   = false,
                                wrap                    = false,
                                show_cursorline         = true,
                                hide_cursor             = false,
                                focus_on_open           = false,
                                winhl                   = '',
                        },
                        outline_items  = {
                                show_symbol_details    = true,
                                show_symbol_lineno     = false,
                                highlight_hovered_item = true,
                                auto_set_cursor        = false,
                                auto_update_events     = {
                                        follow = { 'CursorMoved' },
                                        items  = { 'InsertLeave', 'WinEnter', 'BufEnter', 'BufWinEnter', 'TabEnter', 'BufWritePost' },
                                },
                        },
                        guides         = {
                                enabled = true,
                                markers = {
                                        bottom   = '',
                                        middle   = '',
                                        vertical = '',
                                },
                        },
                        symbol_folding = {
                                autofold_depth = 1,
                                auto_unfold    = {
                                        hovered = true,
                                        only    = true,
                                },
                                markers        = { '', '' },
                        },
                        preview_window = {
                                auto_preview          = false,
                                open_hover_on_preview = false,
                                width                 = 40,
                                min_width             = 30,
                                relative_width        = true,
                                height                = 50,
                                min_height            = 10,
                                relative_height       = true,
                                border                = 'single',
                                winhl                 = 'NormalFloat:',
                                winblend              = 0,
                                live                  = true
                        },
                        keymaps        = {
                                show_help        = '?',
                                close            = { '<Esc>', 'q' },
                                goto_location    = '<Cr>',
                                peek_location    = 'o',
                                goto_and_close   = '<S-Cr>',
                                restore_location = '<C-g>',
                                hover_symbol     = '<C-space>',
                                toggle_preview   = 'P',
                                rename_symbol    = 'r',
                                code_actions     = 'a',
                                fold             = 'h',
                                unfold           = 'l',
                                fold_toggle      = '<Tab>',
                                fold_toggle_all  = '<S-Tab>',
                                fold_all         = 'H',
                                unfold_all       = 'L',
                                fold_reset       = 'R',
                                down_and_jump    = '<C-j>',
                                up_and_jump      = '<C-k>',
                        },
                        providers      = {
                                priority = { 'lsp', 'markdown', 'norg' },
                                lsp      = {
                                        blacklist_clients = {},
                                },
                                markdown = {
                                        filetypes = { 'markdown' },
                                },
                        },

                        symbols        = {
                                filter       = nil,
                                icon_fetcher = nil,
                                icon_source  = nil,
                                icons        = {
                                        File          = { icon = '', hl = 'DropBarIconKindFile' },
                                        Module        = { icon = '', hl = 'DropBarIconKindModule' },
                                        Namespace     = { icon = '󰅪', hl = 'DropBarIconKindNamespace' },
                                        Package       = { icon = '', hl = 'DropBarIconKindPackage' },
                                        Class         = { icon = '', hl = 'DropBarIconKindClass' },
                                        Method        = { icon = '', hl = 'DropBarIconKindMethod' },
                                        Property      = { icon = '', hl = 'DropBarIconKindProperty' },
                                        Field         = { icon = '', hl = 'DropBarIconKindField' },
                                        Constructor   = { icon = '', hl = 'DropBarIconKindConstructor' },
                                        Enum          = { icon = '', hl = 'DropBarIconKindEnum' },
                                        Interface     = { icon = '', hl = 'DropBarIconKindInterface' },
                                        Function      = { icon = '', hl = 'DropBarIconKindFunction' },
                                        Variable      = { icon = '', hl = 'DropBarIconKindVariable' },
                                        Constant      = { icon = '', hl = 'DropBarIconKindConstant' },
                                        String        = { icon = '󰉾', hl = 'DropBarIconKindString' },
                                        Number        = { icon = '', hl = 'DropBarIconKindNumber' },
                                        Boolean       = { icon = '', hl = 'DropBarIconKindBoolean' },
                                        Array         = { icon = '󰅪', hl = 'DropBarIconKindArray' },
                                        Object        = { icon = '', hl = 'DropBarIconKindObject' },
                                        Key           = { icon = '', hl = 'DropBarIconKindKeyword' },
                                        Null          = { icon = '󰢤', hl = 'DropBarIconKindNull' },
                                        EnumMember    = { icon = '', hl = 'DropBarIconKindEnumMember' },
                                        Struct        = { icon = '', hl = 'DropBarIconKindStruct' },
                                        Event         = { icon = '', hl = 'DropBarIconKindEvent' },
                                        Operator      = { icon = '', hl = 'DropBarIconKindOperator' },
                                        TypeParameter = { icon = '', hl = 'DropBarIconKindTypeParameter' },
                                        Component     = { icon = '󰅴', hl = 'DropBarIconKindFunction' },
                                        Fragment      = { icon = '󰅴', hl = 'DropBarIconKindConstant' },
                                        TypeAlias     = { icon = ' ', hl = 'DropBarIconKindTypeParameter' },
                                        Parameter     = { icon = ' ', hl = 'DropBarIconKindTypeParameter' },
                                        StaticMethod  = { icon = ' ', hl = 'DropBarIconKindMethod' },
                                        Macro         = { icon = ' ', hl = 'DropBarIconKindMacro' },
                                },
                        },
                })
        end,
        keys   = {
                { "<A-l>", "<cmd>Outline<cr>", desc = "Outline", mode = { "n" } }
        },
}
